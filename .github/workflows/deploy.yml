name: Website Routes CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags:
      - 'release-*/v*'

env:
  DOCKER_IMAGE_NAME: ilaipi-admin-frontend-starter
  COMPOSE_SERVICE_NAME: starter_admin_front

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Load environment variables
        uses: ilaipi-freedom/load-env-action@latest
        with:
          env_content: ${{ secrets.ENV }}
      - name: Checkout 🛎
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true

      - name: Setup pnpm 📦
        uses: pnpm/action-setup@v4
        with:
          package_json_file: ./package.json

      - name: Install dependencies 📦
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Login to Private Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_HUB_SPACE }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            # 如果是 main 分支提交，使用当前时间和 latest 标签
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value={{date 'YYYYMMDD-HHmm' tz='+08:00'}},enable=${{ github.ref == 'refs/heads/main' }}
            # 如果是 tag 提交，使用默认标签策略
            type=ref,event=tag

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  release:
    runs-on: ${{ matrix.os }}
    needs: ci

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            suffix: pve

    steps:
      - name: Load environment variables
        uses: ilaipi-freedom/load-env-action@latest
        with:
          env_content: ${{ secrets.ENV }}

      - name: Process SSH Connection
        id: ssh_connection
        uses: ilaipi-freedom/process-ssh-connection-action@latest
        with:
          suffix: ${{ matrix.suffix }}
      
      - name: Tailscale
        uses: tailscale/github-action@v2
        if: ${{ matrix.tailscale }}
        with:
          oauth-client-id: ${{ env.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ env.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ steps.ssh_connection.outputs.host }}
          username: ${{ steps.ssh_connection.outputs.username }}
          key: ${{ steps.ssh_connection.outputs.key }}
          port: ${{ steps.ssh_connection.outputs.port }}
          allenvs: true
          script: |
            echo -n "${{ env.DOCKER_HUB_TOKEN }}" | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin ${{ env.DOCKER_REGISTRY }}

            cd ~/deploy/starter
            docker compose pull ${{ env.COMPOSE_SERVICE_NAME }}

            docker compose up -d
